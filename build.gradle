plugins {
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.4.0.2513"
}

group = 'vlad110kg'
version = serviceVersion

repositories {
    mavenCentral()
}

processTestResources {
    duplicatesStrategy 'include'
}

sourceSets {
    test {
        resources {
            srcDir 'src/test/resources'
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation(
        'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.boot:spring-boot-starter-actuator',
        'org.springframework.boot:spring-boot-starter-data-jpa',
        'org.springframework.boot:spring-boot-starter-validation',
        "org.springframework.cloud:spring-cloud-starter-sleuth",
        'ch.qos.logback:logback-access',
        'io.micrometer:micrometer-registry-prometheus',
        'org.flywaydb:flyway-core',
        "org.zalando:logbook-spring-boot-starter:$logbookStarterVersion",
        'com.vladmihalcea:hibernate-types-52:2.11.1',
        'net.logstash.logback:logstash-logback-encoder:6.6',
        'org.springdoc:springdoc-openapi-ui:1.6.9',
        'org.apache.commons:commons-lang3:3.12.0',
        'org.apache.httpcomponents:httpclient:4.5.13',
        'org.apache.commons:commons-math3:3.6.1',
        'org.apache.commons:commons-text:1.10.0',
        'com.theokanning.openai-gpt3-java:service:0.12.0'
    )

    annotationProcessor(
            'org.projectlombok:lombok'
    )

    runtimeOnly(
        'org.postgresql:postgresql'
    )

    compileOnly(
        'org.projectlombok:lombok'
    )

    testImplementation(
        'org.springframework.boot:spring-boot-starter-test',
        "org.testcontainers:testcontainers:$tcVersion",
        "org.testcontainers:junit-jupiter:$tcVersion",
        "org.testcontainers:postgresql:$tcVersion",
        "org.springframework.cloud:spring-cloud-contract-wiremock:$springCloudWireMockVersion",
        "io.rest-assured:rest-assured:$restAssuredVersion",
        "io.rest-assured:json-path:$restAssuredVersion",
        "io.rest-assured:xml-path:$restAssuredVersion",
        'org.assertj:assertj-core:3.23.1',
        'com.github.viclovsky:swagger-coverage-rest-assured:1.5.0',
        'org.projectlombok:lombok'
    )
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test.finalizedBy jacocoTestReport

jar {
    enabled = false
}

sonarqube{
    properties  {
        property "sonar.projectName", "stork"
        property "sonar.projectKey", "stork"
    }
}
